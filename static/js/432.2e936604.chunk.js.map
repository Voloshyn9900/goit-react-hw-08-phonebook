{"version":3,"file":"static/js/432.2e936604.chunk.js","mappings":"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","sources":["App.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  max-width: 600px;\n  min-height: 700px;\n  margin-left: auto;\n  margin-right: auto;\n\n  border: 8px solid #4caf50;\n  border-radius: ${props => props.theme.radii.md};\n`;\n\nexport const Feedback = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n`;\n\nexport const PhoneBook = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 16px;\n  margin-bottom: 26px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  height: 200px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n    height: 60px;\n  margin-left: 10px;\n  margin-top: 8px;\n  text-align: start;\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #4caf50;\n  width: 200px;\n  margin-left: 10px;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n\n  &:disabled {\n    background-color: dimgrey;\n    color: linen;\n    opacity: 1;\n  }\n`;\n\n\n","import { useState } from 'react';\nimport { FormContainer, Label, SubmitButton } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.account.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handlSubmit(event) {\n    event.preventDefault();\n\n    const contactExists = contacts.some(\n      contact => contact.name === name || contact.number === number\n    );\n  \n    if (contactExists) {\n      alert('This contact already exists');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <FormContainer onSubmit={handlSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const ButtonDel = styled.button`\n  display: block;\n  margin-left: auto;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nexport const List = styled.ul`\n  min-width: 320px;\n  max-width: 450px;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  text-align: start;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  margin-bottom: 6px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.account.contacts.items;\nexport const selectFilter = state => state.account.filter;\n\nexport const selectVisiblContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  }\n);\n","import { useEffect } from 'react';\nimport { ButtonDel, List, ListItem } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectVisiblContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisiblContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <List>\n        {contacts.map(contact => (\n          <ListItem key={contact.id}>\n            {contact.name}: {contact.number}\n            <ButtonDel onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete\n            </ButtonDel>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contactSlice\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.account.filter);\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          placeholder=\"Filter\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value.trim()))}\n        />\n      </label>\n    </>\n  );\n};\n","import React from 'react';\nimport { Section, Container, PhoneBook, Title } from '../App.styled';\nimport { Form } from '../components/Form/Form';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function ContactsPage() {\n  return (\n    <Section>\n      <Container>\n        <PhoneBook>\n          <Title>PhoneBook</Title>\n          <Form />\n          <Title>Contacts</Title>\n          <Filter />\n          <ContactList />\n        </PhoneBook>\n      </Container>\n    </Section>\n  );\n}\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","props","theme","radii","md","PhoneBook","_templateObject3","_templateObject4","Title","_templateObject5","FormContainer","Label","SubmitButton","Form","dispatch","useDispatch","contacts","useSelector","state","account","items","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","event","preventDefault","some","contact","alert","addContact","children","_jsx","type","pattern","value","onChange","e","target","title","required","ButtonDel","List","ListItem","selectVisiblContacts","createSelector","filter","toUpperCase","includes","ContactList","useEffect","fetchContacts","_Fragment","map","onClick","deleteContact","id","Filter","placeholder","changeFilter","trim","ContactsPage"],"sourceRoot":""}